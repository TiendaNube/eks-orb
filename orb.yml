commands:
  helm-client:
    description: |
      Allows use the helm client to work with Amazon EKS.
    parameters:
      args:
        default: ""
        description: |
          Arguments to the command selected
        type: string
      command:
        description: |
          Available Commands in the helm client
        type: string
      label:
        default: Helm client command
        description: |
          Description the command line.
        type: string
      namespace:
        description: |
          A specific namespace
        type: string
      working_dir:
        default: ~/project
        description: |
          In which directory to run the steps. Default: ~/project
        type: string
    steps:
    - run:
        command: |
          NAMESPACE="<< parameters.namespace >>"
          COMMAND="<< parameters.command >>"

          if [ -n "${COMMAND}" ]; then
            set -- "$@" "${COMMAND}"
          fi
          if [ -n "${NAMESPACE}" ]; then
            set -- "$@" --namespace "${NAMESPACE}"
          fi

          helm "$@" \
          <<#parameters.args>><<parameters.args>><</parameters.args>>
        name: << parameters.label >>
        working_directory: << parameters.working_dir >>
  helmfile-client:
    description: |
      Allows use the helmfile client to work with Amazon EKS.
    parameters:
      args:
        default: ""
        description: Arguments to the command selected
        type: string
      cluster-name:
        description: EKS cluster name
        type: string
      command:
        description: |
          Available Commands in the helmfile client
        type: string
      env:
        default: ""
        description: Specify the environment name.
        type: string
      label:
        default: Helmfile client command
        description: |
          Description the command line.
        type: string
      working_dir:
        default: ~/project
        description: |
          In which directory to run the steps. Default: ~/project
        type: string
    steps:
    - run:
        command: |
          CLUSTER_NAME="<< parameters.cluster-name >>"
          ENV_NAME="<< parameters.env >>"
          COMMAND="<< parameters.command >>"

          if [ -n "${ENV_NAME}" ]; then
            set -- "$@" -e "${ENV_NAME}"
          fi
          if [ -n "${COMMAND}" ]; then
            set -- "$@" "${COMMAND}"
          fi

          EKS_ENV="${CLUSTER_NAME}" helmfile "$@" \
                                    <<#parameters.args>><<parameters.args>><</parameters.args>>
        name: << parameters.label >>
        working_directory: << parameters.working_dir >>
  kubectl:
    description: |
      Allows use the kubectl to work with Amazon EKS.
    parameters:
      args:
        default: ""
        description: |
          Arguments to the command selected
        type: string
      command:
        description: |
          Available Commands in the kubectl
        type: string
      label:
        default: kubectl command
        description: |
          Description the command line.
        type: string
      namespace:
        description: |
          A specific namespace
        type: string
      working_dir:
        default: ~/project
        description: |
          In which directory to run the steps. Default: ~/project
        type: string
    steps:
    - run:
        command: |
          kubectl -n << parameters.namespace >> \
            <<#parameters.command>><<parameters.command>><</parameters.command>> \
            <<#parameters.args>><<parameters.args>><</parameters.args>>
        name: << parameters.label >>
        working_directory: << parameters.working_dir >>
  update-kubeconfig-with-authenticator:
    description: |
      Allows the stock kubectl client to work with Amazon EKS.
      Installs the AWS CLI, the AWS IAM Authenticator for Kubernetes and
      updates the kubectl configuration file to use the AWS IAM Authenticator.
    parameters:
      aws-profile:
        default: ""
        description: |
          The AWS profile to be used. If not specified, the configured default
          profile for your AWS CLI installation will be used.
        type: string
      aws-region:
        default: ""
        description: |
          The AWS region that the cluster is in. If not specified, the configured default
          region for your AWS CLI installation will be used.
        type: string
      cluster-authentication-role-arn:
        default: ""
        description: |
          To assume a role for cluster authentication, specify an IAM role ARN with
          this option. For example, if you created a cluster while assuming an IAM
          role, then you must also assume that role to connect to the cluster the
          first time.
        type: string
      cluster-context-alias:
        default: ""
        description: |
          Alias for the cluster context name. If a value is not specified,
          the cluster context name will be set to match the cluster ARN.
        type: string
      cluster-name:
        description: |
          The name of the cluster for which to create a kubeconfig entry.
        type: string
      dry-run:
        default: false
        description: |
          Print the merged kubeconfig to stdout instead of writing it to file.
        type: boolean
      kubeconfig-file-path:
        default: ""
        description: |
          Specifies a kubeconfig file to append the configuration details to.
          By default, the configuration is written to the first file path in the
          KUBECONFIG environment variable (if it is set) or the default kubeconfig
          path (.kube/config) in your home directory.
        type: string
      label:
        default: Update the kubectl configuration file to use the authenticator
        description: |
          Description the command line.
        type: string
      verbose:
        default: false
        description: |
          Print more detailed output when writing to the kubeconfig file.
        type: boolean
    steps:
    - run:
        command: |
          CLUSTER_NAME="<< parameters.cluster-name >>"
          AWS_REGION="<< parameters.aws-region >>"
          AWS_PROFILE="<< parameters.aws-profile >>"
          KUBECONFIG_FILE_PATH="<< parameters.kubeconfig-file-path >>"
          ROLE_ARN="<< parameters.cluster-authentication-role-arn >>"
          CLUSTER_CONTEXT_ALIAS="<< parameters.cluster-context-alias >>"
          DRY_RUN="<< parameters.dry-run >>"
          VERBOSE="<< parameters.verbose >>"
          if [ -n "${CLUSTER_NAME}" ]; then
            set -- "$@" --name "${CLUSTER_NAME}"
          fi
          if [ -n "${AWS_REGION}" ]; then
            set -- "$@" --region "${AWS_REGION}"
          fi
          if [ -n "${AWS_PROFILE}" ]; then
            set -- "$@" --profile "${AWS_PROFILE}"
          fi
          if [ -n "${KUBECONFIG_FILE_PATH}" ]; then
            set -- "$@" --kubeconfig "${KUBECONFIG_FILE_PATH}"
          fi
          if [ -n "${ROLE_ARN}" ]; then
            set -- "$@" --role-arn "${ROLE_ARN}"
          fi
          if [ -n "${CLUSTER_CONTEXT_ALIAS}" ]; then
            set -- "$@" --alias "${CLUSTER_CONTEXT_ALIAS}"
          fi
          if [ "${DRY_RUN}" == "true" ]; then
            set -- "$@" --dry-run
          fi
          if [ "${VERBOSE}" == "true" ]; then
            set -- "$@" --verbose
          fi
          aws eks update-kubeconfig "$@"
        name: << parameters.label >>
description: An orb for working with Amazon EKS
display:
  home_url: https://github.com/TiendaNube/eks-orb
examples:
  deploy:
    description: Deploy to EKS
    usage:
      orbs:
        eks: tiendanube/eks@1.1.0
      version: 2.1
      workflows:
        deploy:
          jobs:
          - eks/deploy:
              cluster-name: cluster-name
              region: region
              steps:
              - run:
                  command: |
                    kubectl apply -f bundle.yml
                    kubectl apply -f deployment.yml
  helm-deploy:
    description: EKS Helm Deploy
    usage:
      orbs:
        eks: tiendanube/eks@1.1.0
      version: 2.1
      workflows:
        deploy:
          jobs:
          - eks/helm-deploy:
              chart: stable/chart
              chart-version: latest
              cluster-name: cluster-name
              image-tag: ${CIRCLE_SHA1:0:7}
              namespace: default
              region: aws-region
              release-name: release-name
              values-file: values.yaml
executors:
  default:
    description: CircleCI convenience image for AWS EKS
    docker:
    - image: tiendanube/circleci-eks:v1.1.0
jobs:
  deploy:
    description: Authenticate to eks cluster and run the steps provided
    executor: << parameters.executor >>
    parameters:
      cluster-name:
        description: EKS cluster name
        type: string
      executor:
        default: default
        description: Executor to use for this job
        type: executor
      region:
        description: AWS region where the eks cluster is located
        type: string
      steps:
        description: Steps to deploy your application (e.g. kubectl apply -f deployment.yml)
        type: steps
    steps:
    - checkout
    - update-kubeconfig-with-authenticator:
        aws-region: << parameters.region >>
        cluster-name: << parameters.cluster-name >>
    - steps: << parameters.steps >>
  helm-deploy:
    description: Deploy the given Helm chart to EKS Cluster
    executor: << parameters.executor >>
    parameters:
      chart:
        description: Chart that will be installed
        type: string
      checkout:
        default: true
        description: Boolean for whether or not to checkout as a first step. Default
          is true.
        type: boolean
      cluster-name:
        description: EKS cluster name
        type: string
      executor:
        default: default
        description: Executor to use for this job
        type: executor
      image-tag:
        default: ${CIRCLE_SHA1:0:7}
        description: Which image tag will be installed
        type: string
      namespace:
        description: Namespace where the chart will be installed
        type: string
      region:
        description: AWS region where the eks cluster is located
        type: string
      release-name:
        description: Helm release name
        type: string
      s3-chart-repo:
        default: null
        description: Additional helm chart repository
        type: string
      values-file:
        description: Helm values file
        type: string
    steps:
    - when:
        condition: << parameters.checkout >>
        steps:
        - checkout
    - update-kubeconfig-with-authenticator:
        aws-region: << parameters.region >>
        cluster-name: << parameters.cluster-name >>
    - when:
        condition: << parameters.s3-chart-repo >>
        name: Add additional helm repo
        steps:
        - run: helm repo add << parameters.s3-chart-repo >> s3://<< parameters.s3-chart-repo
            >>/
    - run:
        command: |
          helm upgrade --install << parameters.release-name >> --values << parameters.values-file >> --set-string image.tag="<< parameters.image-tag >>" --namespace << parameters.namespace >> << parameters.chart >>
        name: Upgrade helm chart
    - run:
        command: |
          sleep 10
          helm status << parameters.release-name >>
        name: Check the release status
  helm-deploy-multi:
    description: Deploy the given Helm chart to EKS Cluster multiple times
    executor: << parameters.executor >>
    parameters:
      chart:
        description: Chart that will be installed
        type: string
      checkout:
        default: true
        description: Boolean for whether or not to checkout as a first step. Default
          is true.
        type: boolean
      cluster-name:
        description: EKS cluster name
        type: string
      executor:
        default: default
        description: Executor to use for this job
        type: executor
      image-tag:
        default: ${CIRCLE_SHA1:0:7}
        description: Which image tag will be installed
        type: string
      namespace:
        description: Namespace where the chart will be installed
        type: string
      region:
        description: AWS region where the eks cluster is located
        type: string
      release-name-prefix:
        description: Prefix for the release name
        type: string
      s3-chart-repo:
        default: null
        description: Additional helm chart repository
        type: string
      values-files-dir:
        description: Directory containing all helm values files
        type: string
    steps:
    - when:
        condition: << parameters.checkout >>
        steps:
        - checkout
    - update-kubeconfig-with-authenticator:
        aws-region: << parameters.region >>
        cluster-name: << parameters.cluster-name >>
    - when:
        condition: << parameters.s3-chart-repo >>
        name: Add additional helm repo
        steps:
        - run: helm repo add << parameters.s3-chart-repo >> s3://<< parameters.s3-chart-repo
            >>/
    - run:
        command: |
          for file in << parameters.values-files-dir >>/*; do
            helm upgrade \
            --install << parameters.release-name-prefix >>-$(basename $file) \
            --values $file \
            --set-string image.tag="<< parameters.image-tag >>" \
            --namespace << parameters.namespace >> \
            << parameters.chart >>
          done
        name: Upgrade helm chart
    - run:
        command: |
          sleep 10
          for file in << parameters.values-files-dir >>/*; do
            helm status << parameters.release-name-prefix >>-$(basename $file)
          done
        name: Check the release status
version: 2.1

