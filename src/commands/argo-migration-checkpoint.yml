description: >
  Poll for user feedback via application annotation to determine whether to proceed or rollback a deployment.
  This command is typically used during canary migrations to get user approval before completing the migration.

parameters:
  release-name:
    description: Name of the ArgoCD application to check for annotations
    type: string
  namespace:
    description: Namespace where the ArgoCD application is deployed (typically 'argocd')
    type: string
    default: argocd
  annotation-key:
    description: Annotation key to look for user feedback
    type: string
    default: canary.tiendanube.com/next-migration-step
  timeout:
    description: Maximum number of minutes to wait for user feedback before timing out
    type: integer
    default: 1440  # 24 hours in minutes
  check-interval:
    description: Number of seconds to wait between annotation checks
    type: integer
    default: 10
  migration-phase:
    description: Current migration phase value (for rollback scenarios)
    type: string
    default: ""

steps:
  - run:
      name: Poll for user feedback via application annotation
      command: |
        echo "Polling for user feedback annotation '<< parameters.annotation-key >>'..."
        MAX_ATTEMPTS=$((<< parameters.timeout >> * 60 / << parameters.check-interval >>))
        SLEEP_SECONDS=<< parameters.check-interval >>
        ATTEMPTS=0
        ANNOTATION_KEY="<< parameters.annotation-key >>"
        APP_NAME="<< parameters.release-name >>"
        NAMESPACE="<< parameters.namespace >>"
        MIGRATION_PHASE="<< parameters.migration-phase >>"
        delete_annotation() {
          kubectl annotate application -n "${NAMESPACE}" "${APP_NAME}" "${ANNOTATION_KEY}-" --overwrite
          echo "üóëÔ∏è Deleted annotation for future reuse"
        }
        while [ $ATTEMPTS -lt $MAX_ATTEMPTS ]; do
          ATTEMPTS=$((ATTEMPTS+1))
          if [ $((ATTEMPTS % 60)) -eq 0 ]; then
            echo "Polling for $(($ATTEMPTS * $SLEEP_SECONDS / 60)) minutes..."
          fi
          STATUS=$(kubectl get application -n "${NAMESPACE}" "${APP_NAME}" -o jsonpath='{.metadata.annotations.'${ANNOTATION_KEY//\./\\.}'}' 2>/dev/null)
          if [ $? -ne 0 ]; then
            echo "Error retrieving annotation, will retry in $SLEEP_SECONDS seconds"
            sleep $SLEEP_SECONDS
            continue
          fi
          if [ -z "$STATUS" ]; then
            echo "No feedback annotation found yet, will retry in $SLEEP_SECONDS seconds" >&2
            sleep $SLEEP_SECONDS
            continue
          fi
          echo "Found feedback annotation with value: $STATUS"
          case "$STATUS" in
            "proceed")
              echo "‚úÖ User feedback is to PROCEED with deployment"
              delete_annotation
              exit 0
              ;;
            "rollback")
              echo "‚ö†Ô∏è User feedback is to ROLLBACK deployment"
              delete_annotation
              if [ -n "${MIGRATION_PHASE}" ]; then
                echo "Setting canaryMigrationPhaseOverride to 'safe' for rollback"
              fi
              echo "Rollback requested by user via annotation"
              exit 1
              ;;
            *)
              echo "‚ö†Ô∏è Unknown feedback value: '$STATUS', will retry in $SLEEP_SECONDS seconds"
              sleep $SLEEP_SECONDS
              ;;
          esac
        done
        if [ $ATTEMPTS -ge $MAX_ATTEMPTS ]; then
          echo "‚ùå Timed out waiting for user feedback annotation after << parameters.timeout >> minutes"
          echo "Please manually check the deployment status"
          exit 1
        fi
