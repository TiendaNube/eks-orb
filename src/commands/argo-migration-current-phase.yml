description: |
  Compute the current migration phase.
  The migration phase is written to CANARY_MIGRATION_PHASE environment variable for use in subsequent steps.

parameters:
  release-name:
    type: string
  values-file:
    type: string
  namespace:
    type: string
  image-tag:
    type: string
  chart:
    type: string
  args:
    type: string
  mesh:
    type: boolean

steps:
  - run:
      name: Compute migration phase
      command: |
        echo "------------------------------------------------------"
        MIGRATION_PHASE_DIR=/tmp/migration-phase
        mkdir -p "$MIGRATION_PHASE_DIR"
        # Clean any previous files
        rm -f "$MIGRATION_PHASE_DIR"/* 2>/dev/null || true
        MIGRATION_PHASE_RAW_FILE=$MIGRATION_PHASE_DIR/rendered.yaml
        echo "üìÑ Environment already set up for this step"
        echo "------------------------------------------------------"
        # Define the migration phase label key
        MIGRATION_PHASE_LABEL="canary.tiendanube.com/migration-phase"
        # Render Helm chart to a temporary file
        helmv3 template \
          << parameters.release-name >> \
          --values << parameters.values-file >> \
          --namespace << parameters.namespace >> \
          --set-string image.tag="<< parameters.image-tag >>" \
          --set mesh=<< parameters.mesh >> \
          --set-string global.profile=$PROFILE_NAME \
          <<#parameters.args>><<parameters.args>><</parameters.args>> \
          --dry-run=server \
          << parameters.chart >> > $MIGRATION_PHASE_RAW_FILE
        echo "------------------------------------------------------"
        echo "üìÑ Computed YAML file:"
        echo "------------------------------------------------------"
        cat $MIGRATION_PHASE_RAW_FILE
        echo "------------------------------------------------------"
        # Define the yq expression for extracting the migration phase label
        YQ_EXPR='select(.kind == "Rollout") | .metadata.labels["'"$MIGRATION_PHASE_LABEL"'"]'
        # Extract the migration phase label (empty string if not found)
        export MIGRATION_PHASE=$(yq "$YQ_EXPR" $MIGRATION_PHASE_RAW_FILE)
        # Default to "completed" if not found or is 'null'
        if [[ -n "$MIGRATION_PHASE" ]] && [[ "$MIGRATION_PHASE" != "null" ]]; then
          case "$MIGRATION_PHASE" in
            safe|initial|traffic|completed)
              echo "‚úÖ Valid migration phase: $MIGRATION_PHASE"
              ;;
            *)
              echo "‚ùå Error: MIGRATION_PHASE must be one of: safe, initial, traffic, completed"
              echo "üîç Current MIGRATION_PHASE value: $MIGRATION_PHASE"
              exit 1
              ;;
          esac
        else
          MIGRATION_PHASE="completed"
          echo "‚ÑπÔ∏è  No migration phase found. Defaulting to: $MIGRATION_PHASE"
        fi
        echo "------------------------------------------------------"
        echo "export CANARY_MIGRATION_PHASE=$MIGRATION_PHASE" | tee -a $BASH_ENV
        echo "------------------------------------------------------"
        echo "üè∑Ô∏è  Migration phase: $MIGRATION_PHASE"
        echo "------------------------------------------------------"
