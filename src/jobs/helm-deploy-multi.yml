description: Deploy the given Helm chart to EKS Cluster multiple times
executor: << parameters.executor >>
parameters:
  executor:
    description: Executor to use for this job
    type: executor
    default: default
  cluster-name:
    type: string
    description: EKS cluster name
  region:
    type: string
    description: AWS region where the eks cluster is located
  s3-chart-repo:
    type: string
    description: Additional helm chart repository
    default:
  values-files-dir:
    type: string
    description: Directory containing all helm values files
  release-name-prefix:
    type: string
    description: Prefix for the release name
  namespace:
    type: string
    description: Namespace where the chart will be installed
  chart:
    type: string
    description: Chart that will be installed
  image-tag:
    type: string
    description: Which image tag will be installed
    default: ${CIRCLE_SHA1:0:7}
  checkout:
    type: boolean
    description: Boolean for whether or not to checkout as a first step. Default is true.
    default: true
steps:
  - when:
      condition: << parameters.checkout >>
      steps:
        - checkout
  - update-kubeconfig-with-authenticator:
      cluster-name: << parameters.cluster-name >>
      aws-region: << parameters.region >>
  - when:
      condition: << parameters.s3-chart-repo >>
      name: Add additional helm repo
      steps:
        - run: helm repo add << parameters.s3-chart-repo >> s3://<< parameters.s3-chart-repo >>/
  - run:
      name: Upgrade helm chart
      command: >
        for file in << parameters.values-files-dir >>/*; do
          helm upgrade \
          --install << parameters.release-name-prefix >>-$(basename $file) \
          --values $file \
          --set-string image.tag="<< parameters.image-tag >>" \
          --namespace << parameters.namespace >> \
          << parameters.chart >>
        done
  - run:
      name: Check the release status
      command: |
        sleep 10
        for file in << parameters.values-files-dir >>/*; do
          helm status << parameters.release-name-prefix >>-$(basename $file)
        done
